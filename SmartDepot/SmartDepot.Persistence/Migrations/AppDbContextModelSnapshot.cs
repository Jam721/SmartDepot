// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SmartDepot.Persistence;

#nullable disable

namespace SmartDepot.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SmartDepot.Persistence.Entities.ItemEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Quote")
                        .HasColumnType("text");

                    b.Property<int>("StorageConditions")
                        .HasColumnType("integer");

                    b.Property<double>("VolumeCubicMeters")
                        .HasColumnType("double precision");

                    b.Property<int>("WarehouseEntityId")
                        .HasColumnType("integer");

                    b.Property<double>("WeightKg")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("WarehouseEntityId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("SmartDepot.Persistence.Entities.TransferEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("FromWarehouseId")
                        .HasColumnType("integer");

                    b.Property<int>("ItemEntityId")
                        .HasColumnType("integer");

                    b.Property<int>("ToWarehouseId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("TransferredAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("FromWarehouseId");

                    b.HasIndex("ItemEntityId");

                    b.HasIndex("ToWarehouseId");

                    b.ToTable("Transfers");
                });

            modelBuilder.Entity("SmartDepot.Persistence.Entities.WarehouseEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("MaxVolumeCapacity")
                        .HasColumnType("double precision");

                    b.Property<double>("MaxWeightCapacity")
                        .HasColumnType("double precision");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("SupportedConditions")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Warehouses");
                });

            modelBuilder.Entity("SmartDepot.Persistence.Entities.ItemEntity", b =>
                {
                    b.HasOne("SmartDepot.Persistence.Entities.WarehouseEntity", "Warehouse")
                        .WithMany()
                        .HasForeignKey("WarehouseEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("SmartDepot.Persistence.Entities.TransferEntity", b =>
                {
                    b.HasOne("SmartDepot.Persistence.Entities.WarehouseEntity", "FromWarehouse")
                        .WithMany()
                        .HasForeignKey("FromWarehouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartDepot.Persistence.Entities.ItemEntity", "Item")
                        .WithMany()
                        .HasForeignKey("ItemEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartDepot.Persistence.Entities.WarehouseEntity", "ToWarehouse")
                        .WithMany()
                        .HasForeignKey("ToWarehouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FromWarehouse");

                    b.Navigation("Item");

                    b.Navigation("ToWarehouse");
                });
#pragma warning restore 612, 618
        }
    }
}
